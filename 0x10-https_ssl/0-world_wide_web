#!/usr/bin/env bash
#!/usr/bin/env bash
# Configure my domain zone:
# www --> 914-lb-01 34.237.76.64
# web-01 --> 914-web-01 34.138.32.248
# web-02 --> 914-web-02 3.226.74.205

# -- To be evaluated --
# domain_information () {
#     line=$(dig "$2"."$1" | grep -A1 'ANSWER SECTION:' | tr '\t' '\n' | tail -2 | tr '\n' ' ')
#     echo "$2 $line" | awk '{print "The subdomain " $1 " is a " $2 " record and points to " $3}'
# }

# if [ "$#" == 1 ]
# then
#   domain_information "$1" "www"
#   domain_information "$1" "lb-01"
#   domain_information "$1" "web-01"
#   domain_information "$1" "web-02"
# elif [ "$#" == 2 ]
# then
#   domain_information "$1" "$2"
# fi
#-- To be evaluated --

domain="$1"
subdomain="$2"

if [[ -z "$subdomain" ]]; then
    subdomains=("www" "lb-01" "web-01" "web-02")
else
    subdomains=("$subdomain")
fi

declare -A ip_addresses=(
    ["www"]="teamupgrade.net"
    ["lb-01"]="54.89.142.211"
    ["web-01"]="54.167.185.107"
    ["web-02"]="54.237.96.153"
)

for sub in "${subdomains[@]}"; do
    full_subdomain="$sub.$domain"
    if [[ -v ip_addresses[$sub] ]]; then
        result="${ip_addresses[$sub]}"
        record_type=$(dig "$full_subdomain" +short | awk '{print $4}')
        echo "The subdomain $sub is a $record_type record and points to $result"
    else
        echo "The subdomain $sub does not have a predefined IP address"
    fi
done
